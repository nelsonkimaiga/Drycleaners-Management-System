/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flush.dry.cleaning.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Kimaiga
 */
public class Notify extends javax.swing.JFrame {
      Connection conn = null;
    String url = "jdbc:mysql://localhost/";// url: - Database url where stored or created your database
    String dbName = "flush_drycleaners";
    String driver = "com.mysql.jdbc.Driver";
    String userName = "root";//  userName: - User name of MySQL
    String password = "";// password: -Password of MySQL
    Statement st;
    Statement stmt;
    ResultSet rs;
    SimpleDateFormat format = new SimpleDateFormat("YYYY-MM-dd");
    /**
     * Creates new form Notify
     */
    public Notify() {
                       //Test database connection
        try{
	       Class.forName(driver);

             conn = (com.mysql.jdbc.Connection) DriverManager.getConnection(url+dbName,userName,password);

              st = (com.mysql.jdbc.Statement) conn.createStatement();

         //    this.setTitle("Users Account");

	      }

//catch and display any errors
	            catch(Exception exp)
                    {
	              JOptionPane.showMessageDialog(null, "Cannot connect to the database,check network settings.","ERROR",JOptionPane.ERROR_MESSAGE);
	            }

        initComponents();
                         setLocationRelativeTo(null);
        this.setResizable(false);
        LoadCustomers();
        update_DepositTable();
        LoadClothes();
    }
    private void update_DepositTable(){
         
         try{
             String sql ="Select  Customer_ID , Number_of_clothes , deposit_date FROM cloth_deposit ";
           st=conn.prepareStatement(sql);
           rs=st.executeQuery(sql);
           deposit.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, e);
             
         }
    
     }
    
    private void LoadClothes() {
        try {
            
            System.out.println("Loading saved customer ids");
            String sql1;
            sql1 = "SELECT Number_of_clothes FROM cloth_deposit WHERE isDeleted = 0 Order by Number_of_clothes";
            rs = st.executeQuery(sql1);

            cbono.removeAllItems();	
            cbono.addItem("");
            //Empties the combobox
            while (rs.next()) {													//Loops through each resultset until no other record is found.
                cbono.addItem(rs.getString("Number_of_clothes"));	
               // System.out.println(sql1);//addItem() adds an item to the combobox. rs.getString('field') gets the value of the record from the given field
            }
        } catch (SQLException x) {
            //Catch any problem that you may get with your SQL statement
            System.out.println("SQL Error while loading filenumber: " + x.getMessage());
        }
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboid = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        deposit = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        datedue = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbono = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("NOTIFY A CUSTOMER WHEN THEIR LAUNDRY WILL BE DUE");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Customer ID");

        cboid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cboid.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT AN ITEM--" }));

        deposit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(deposit);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Date Due");

        datedue.setMaxSelectableDate(new java.util.Date(1427752914000L));
        datedue.setMinSelectableDate(new java.util.Date(1427234514000L));

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Number of clothes");

        jMenu1.setText("File");

        jMenuItem1.setText("Back");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboid, 0, 188, Short.MAX_VALUE)
                    .addComponent(datedue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1)
                    .addComponent(cbono, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboid, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(cbono, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datedue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(40, 40, 40)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
new LaundryAttendant().setVisible(true);
dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 String customerid=cboid.getSelectedItem().toString();
 String clothesno=cbono.getSelectedItem().toString();
 String date=format.format(datedue.getDate());
 
  try {
                 

 String  sql = "INSERT INTO datedue (customer_id, no_of_clothes,date) VALUES ('" +customerid+ "','" +clothesno+ "','" +date+ "')";

                    System.out.println("insert successfull....");
                    st.execute(sql);

                    
                    
                    JOptionPane.showMessageDialog(null,"Successful, datedue updated");
                    System.out.println("account updated");
cboid.setSelectedIndex(0);
datedue.setDate(null);
cbono.setSelectedIndex(0);
                   // loadgrades();
                } catch (SQLException xe) {
                    JOptionPane.showMessageDialog(null, " Sorry, date due updating was not succesful"+xe.getMessage());
                    System.out.println("Database connection error" + xe.getMessage());
                    cboid.setSelectedIndex(0);
datedue.setDate(null);
cbono.setSelectedIndex(0);
                }
    }   
//Code to populate our combo-box
private void LoadCustomers() {
        try {
            
            System.out.println("Loading saved customer ids");
            String sql1;
            sql1 = "SELECT Customer_ID FROM customer_details WHERE isDeleted = 0 Order by Customer_ID";
            rs = st.executeQuery(sql1);

            cboid.removeAllItems();	
            cboid.addItem("");
            //Empties the combobox
            while (rs.next()) {													//Loops through each resultset until no other record is found.
                cboid.addItem(rs.getString("Customer_ID"));	
               // System.out.println(sql1);//addItem() adds an item to the combobox. rs.getString('field') gets the value of the record from the given field
            }
        } catch (SQLException x) {
            //Catch any problem that you may get with your SQL statement
            System.out.println("SQL Error while loading filenumber: " + x.getMessage());
        } 
        
     


// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        ////////////////////////////////////
        ///////Give the Gui window /////////
        /////// look and feel      /////////
        ////////////////////////////////////
        try {
                      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                    } catch (Exception e) {
                      System.err.println("Look and feel not set.");
                    }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notify().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboid;
    private javax.swing.JComboBox cbono;
    private com.toedter.calendar.JDateChooser datedue;
    private javax.swing.JTable deposit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
